
//Problem 1
//If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
//Find the sum of all the multiples of 3 or 5 below 1000.

let problem1 = (target) => {
    let res = 0;
    for (var i = 0; i < target; i++) {
        if (i % 3 === 0 || i % 5 === 0) {
            res += i
        }
    };
    return res;
}


//Problem 2
//Even Fibonacci numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

let problem2 = () => {
    function getFib(oldNum = 1, currentNum = 2 , res = [1, 2], max = 4000000) {
        let current = oldNum + currentNum;
        if (current > max) {
            console.log(res.filter((numb)=> numb % 2 === 0).reduce( (prev, curr) => prev + curr ))
            return;
        }
        res.push(current);
        getFib(currentNum, current, res, max);
    }
    getFib();
}